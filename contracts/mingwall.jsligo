type transferParams = michelson_pair<[address, "from", michelson_pair<[address, "to", amt, "value"]>, ""]>

type storage = int;

type parameter =
  ["ChangeManagerEOA", address]
| ["SaveAchievement", ticket]
| ["Transfer", transferParams]
| ["TransferRelay", ticket]
| ["UpdateProfile", ticket]
| ["Reset"];

const owner = "tz1KqTpEZ7Yob7QbPE4Hy4Wo8fHG8LhKxZSx" as address;

type ret = [list<operation>, storage];

const main = (action: parameter, store: storage): return_ => {
  if (Tezos.get_source() != owner) { return failwith("Access denied."); }
  else { return [list([]), store]; };
};

const add = ([store, delta] : [storage, int]) : storage => store + delta;

const sub = ([store, delta] : [storage, int]) : storage => store - delta;

const main = ([action, store] : [parameter, storage]) : ret => {
 match (action, {
  ChangeEOA:(n: int) => add ([store, n]),
  StoreTicket:(n: int) => sub ([store, n]),
  UpdateProfile:(n: int) => sub ([store, n]),
  Reset    :()  => 0})
};
