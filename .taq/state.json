// WARNING: This file is autogenerated and should NOT be modified
{
    "build": "dd46883",
    "configHash": "b0e1ab3101d6d5e4f799c61eb1ca8bc593f0d53c9d291bea38fde47b14e532a4",
    "tasks": {
        "clean": {
            "name": "@taqueria/plugin-core",
            "type": "npm"
        },
        "ligo": {
            "name": "@taqueria/plugin-ligo",
            "type": "npm"
        },
        "compile": {
            "name": "@taqueria/plugin-ligo",
            "type": "npm"
        },
        "test": {
            "name": "@taqueria/plugin-ligo",
            "type": "npm"
        },
        "get-image": {
            "task": "get-image",
            "command": "get-image",
            "description": "Provided by more than one plugin. The option --plugin is required.",
            "hidden": true,
            "handler": "proxy",
            "options": [
                {
                    "flag": "plugin",
                    "description": "Specify which plugin should be used to execute this task",
                    "choices": [
                        "@taqueria/plugin-ligo",
                        "ligo",
                        "@taqueria/plugin-tezos-client",
                        "tezos-client"
                    ],
                    "required": true
                }
            ]
        },
        "client": {
            "name": "@taqueria/plugin-tezos-client",
            "type": "npm"
        },
        "typecheck": {
            "name": "@taqueria/plugin-tezos-client",
            "type": "npm"
        },
        "simulate": {
            "name": "@taqueria/plugin-tezos-client",
            "type": "npm"
        }
    },
    "operations": {},
    "templates": {
        "contract": {
            "name": "@taqueria/plugin-ligo",
            "type": "npm"
        }
    },
    "plugins": [
        {
            "name": "@taqueria/plugin-core",
            "version": "0.1",
            "schema": "1.0",
            "alias": "core",
            "tasks": [
                {
                    "task": "clean",
                    "command": "clean",
                    "description": "Clean all the Taqueria-related docker images",
                    "encoding": "application/json",
                    "handler": "proxy",
                    "options": []
                }
            ],
            "operations": [],
            "templates": []
        },
        {
            "name": "@taqueria/plugin-ligo",
            "version": "0.1",
            "schema": "1.0",
            "alias": "ligo",
            "tasks": [
                {
                    "task": "ligo",
                    "command": "ligo",
                    "description": "This task allows you to run arbitrary LIGO native commands. Note that they might not benefit from the abstractions provided by Taqueria",
                    "encoding": "none",
                    "handler": "proxy",
                    "options": [
                        {
                            "shortFlag": "c",
                            "flag": "command",
                            "description": "The command to be passed to the underlying LIGO binary, wrapped in quotes",
                            "required": true,
                            "type": "string"
                        }
                    ]
                },
                {
                    "task": "compile",
                    "command": "compile <sourceFile>",
                    "aliases": [
                        "c",
                        "compile-ligo"
                    ],
                    "description": "Compile a smart contract written in a LIGO syntax to Michelson code, along with its associated storage/parameter list files if they are found",
                    "encoding": "json",
                    "handler": "proxy",
                    "options": []
                },
                {
                    "task": "test",
                    "command": "test <sourceFile>",
                    "description": "Test a smart contract written in LIGO",
                    "encoding": "json",
                    "handler": "proxy",
                    "options": []
                },
                {
                    "task": "get-image",
                    "command": "get-image",
                    "description": "Gets the name of the image to be used",
                    "hidden": true,
                    "handler": "proxy",
                    "options": []
                }
            ],
            "operations": [],
            "templates": [
                {
                    "template": "contract",
                    "command": "contract <sourceFileName>",
                    "description": "Create a LIGO contract with boilerplate code",
                    "options": [
                        {
                            "shortFlag": "s",
                            "flag": "syntax",
                            "description": "The syntax used in the contract",
                            "type": "string"
                        }
                    ],
                    "positionals": [
                        {
                            "placeholder": "sourceFileName",
                            "description": "The name of the LIGO contract to generate",
                            "type": "string"
                        }
                    ],
                    "handler": "function",
                    "encoding": "none"
                }
            ]
        },
        {
            "name": "@taqueria/plugin-tezos-client",
            "version": "0.1",
            "schema": "1.0",
            "alias": "tezos-client",
            "tasks": [
                {
                    "task": "client",
                    "command": "client",
                    "description": "This task allows you to run arbitrary octez-client native commands. Note that they might not benefit from the abstractions provided by Taqueria",
                    "encoding": "none",
                    "handler": "proxy",
                    "options": [
                        {
                            "shortFlag": "c",
                            "flag": "command",
                            "description": "The command to be passed to the underlying octez-client binary, wrapped in quotes",
                            "required": true,
                            "type": "string"
                        }
                    ]
                },
                {
                    "task": "typecheck",
                    "command": "typecheck <sourceFile>",
                    "aliases": [
                        "tc"
                    ],
                    "description": "Typecheck a Michelson contract",
                    "encoding": "json",
                    "handler": "proxy",
                    "options": [],
                    "positionals": [
                        {
                            "placeholder": "sourceFile",
                            "description": "The name of the Michelson contract you wish to typecheck"
                        }
                    ]
                },
                {
                    "task": "simulate",
                    "command": "simulate <sourceFile>",
                    "aliases": [
                        "sim"
                    ],
                    "description": "Run a Michelson contract as a simulation",
                    "encoding": "json",
                    "handler": "proxy",
                    "options": [
                        {
                            "flag": "storage",
                            "description": "Name of the storage file that contains the storage value as a Michelson expression, in the artifacts directory, used for originating a contract",
                            "required": false
                        },
                        {
                            "flag": "param",
                            "description": "Name of the parameter file that contains the parameter value as a Michelson expression, in the artifacts directory, used for invoking a deployed contract",
                            "required": true
                        },
                        {
                            "flag": "entrypoint",
                            "description": "You may explicitly specify an entrypoint to make the parameter value shorter, without having to specify a chain of (Left (Right ... 14 ...))",
                            "required": false
                        }
                    ],
                    "positionals": [
                        {
                            "placeholder": "sourceFile",
                            "description": "The name of the Michelson contract you wish to simulate"
                        }
                    ]
                },
                {
                    "task": "get-image",
                    "command": "get-image",
                    "description": "Gets the name of the image to be used",
                    "hidden": true,
                    "handler": "proxy",
                    "options": []
                }
            ],
            "operations": [],
            "templates": []
        }
    ]
}